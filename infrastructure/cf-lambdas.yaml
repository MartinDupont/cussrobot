AWSTemplateFormatVersion: 2010-09-09
Description: Creates lambda.
Resources:
  TwitterLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: FunctionSpecificPermissions
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - events:PutEvents
            Resource: '*'
          - Effect: Allow
            Action:
            - events:DescribeRule
            - events:PutRule
            - events:DeleteRule
            - events:PutTargets
            - events:RemoveTargets
            Resource: '*'
          - Effect: Allow
            Action:
            - logs:DescribeLogGroups
            - logs:CreateLogGroup
            - logs:PutRetentionPolicy
            - logs:DescribeLogGroups
            Resource: '*'
          - Effect: Allow
            Action:
            - ssm:GetParameters
            Resource: '*'
  TwitterLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Role: !GetAtt TwitterLambdaRole.Arn
      Code: ../tmp/
      Runtime: python3.7
      Timeout: 600
      MemorySize: 512
      Environment:
        Variables:
          CONSUMER_KEY: '{{resolve:ssm:twitterConsumerKey:3}}'
          CONSUMER_SECRET: '{{resolve:ssm:twitterConsumerSecret:2}}'
          ACCESS_TOKEN_KEY: '{{resolve:ssm:twitterTokenKey:2}}'
          ACCESS_TOKEN_SECRET: '{{resolve:ssm:twitterTokenSecret:2}}'
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${TwitterLambda}
      RetentionInDays: 30
  PipelineEventsRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Timer for twitter lambda.
      ScheduleExpression: "rate(1 minute)"
      Targets:
      - Id: PipelineStackUpdateLambda
        Arn: !GetAtt TwitterLambda.Arn
  CloudWatchPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref TwitterLambda
      Principal: events.amazonaws.com
      SourceArn: !GetAtt PipelineEventsRule.Arn
